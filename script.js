// Generated by CoffeeScript 1.6.3

$(document).ready(function() {

  function Game() {
    this.cells = [];
    this.rows = [];
    this.minePosistions = [];
    this.mines = [];
  }

  Game.prototype.chooseMines = function() {
    for (var i = 0; i < 10; i++) {
      this.minePosistions.push(Math.floor((Math.random() * 101)));
    }
  };

  Game.prototype.makeCells = function() {
    var counter = 0;
    for (var x = 0; x < 10; x ++) {
      var row = [];
      for (var y = 0; y < 10; y++) {
        if ($.inArray(counter, this.minePosistions) !== -1) {
          var cell = new Cell(true, counter, x, y)
          row.push(cell);
          this.cells.push(cell);
          this.mines.push(cell);
        } 
        else {
          var cell = new Cell(false, counter, x, y)
          row.push(cell);
          this.cells.push(cell);
        }
        counter = counter + 1;
      }
      this.rows.push(row);
    }
  };

  Game.prototype.finishCells = function() {
    $.each(this.cells, function( index, cell ) {
      cell.findNeighbors();
    });
  };

  Game.prototype.checkNeighbors = function() {
    var mines = this.mines;
    var rows = this.rows;
    $.each(mines, function(index, cell) {
      $(cell.html_position()).addClass( "mine" );
      $.each(cell.neighbors, function(index, neighbor_cell) {
        if (neighbor_cell) {
          neighbor_cell.neighborCount += 1;
        };
      });
    });
  };

  Game.prototype.addNeighborClass = function() {
    $.each(this.cells, function(index, value) { 
      if ($( "td:eq(" + index + ")").hasClass("mine") === false) {
        $( "td:eq(" + index + ")").addClass( "neighbor_" + value.neighborCount.toString() );
      }
    });
  };

  Game.prototype.click = function() {
    $("td").click(function() {
      if ($(this).hasClass("mine")) {
        $(this).addClass("active");
        alert("Game Over!");
      }
      else {
        var x = ($(this).parent()[0].rowIndex);
        var y = ($(this).prop('cellIndex'));
        cell = game.rows[x][y];
        cell.makeActive();
      }
    });
  };

  function Cell(mine, position, xCoordinate, yCoordinate) {
    this.mine = mine;
    this.xCoordinate = xCoordinate;
    this.yCoordinate = yCoordinate;
    this.position = position;
    this.neighborCount = 0;
    this.neighbors = [];
  };

  Cell.prototype.html_position = function() {
    return "td:eq(" + this.position + ")"
  };

  Cell.prototype.findNeighbors = function() {
    if (game.rows[this.xCoordinate]) {
      this.neighbors.push(game.rows[this.xCoordinate][this.yCoordinate - 1 ])
      this.neighbors.push(game.rows[this.xCoordinate][this.yCoordinate + 1 ])
    };
    if (game.rows[this.xCoordinate - 1]) {
      this.neighbors.push(game.rows[this.xCoordinate - 1][this.yCoordinate - 1 ])
      this.neighbors.push(game.rows[this.xCoordinate - 1][this.yCoordinate + 1 ])
      this.neighbors.push(game.rows[this.xCoordinate - 1][this.yCoordinate])
    };
    if (game.rows[this.xCoordinate + 1]) {
      this.neighbors.push(game.rows[this.xCoordinate + 1][this.yCoordinate - 1 ])
      this.neighbors.push(game.rows[this.xCoordinate + 1][this.yCoordinate + 1 ])
      this.neighbors.push(game.rows[this.xCoordinate + 1][this.yCoordinate])
    };
  };

  Cell.prototype.exposeNeighbors = function() {
    $.each(this.neighbors, function(index, cell) {
      var square = $(cell.html_position());
      if (square.hasClass("active") === false) {
        cell.makeActive();
      };
    });
  };

  Cell.prototype.makeActive = function() {
    var square = $(this.html_position());
    if (square.hasClass("active") === false) {
      square.addClass("active");
    }
    if (square.hasClass("neighbor_0")) {
      this.exposeNeighbors();
    }
  };

  Cell.prototype.isBorder = function() {
    if (this.xCoordinate == 0 || this.yCoordinate == 0 || 
      this.xCoordinate == 9 || this.yCoordinate == 9) {
      return true;
    }
    else {
      return false;
    }
  };

  var game = new Game();
  game.chooseMines();
  game.makeCells();
  game.finishCells();
  game.checkNeighbors();
  game.addNeighborClass();
  game.click();
});
